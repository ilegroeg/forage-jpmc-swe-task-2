From 30dbe96ddd7068a1700a9e3f960fc776e83c64fe Mon Sep 17 00:00:00 2001
From: ilegroeg <72893345+ilegroeg@users.noreply.github.com>
Date: Mon, 6 May 2024 10:39:28 -0500
Subject: [PATCH] Update graph interface

Updated interface to:
(1) show visual representation of stock data,
(2) continuously read data from stream without the need for multiple inputs.
---
 src/App.tsx   | 25 +++++++++++++++++++------
 src/Graph.tsx | 15 +++++++++++++--
 2 files changed, 32 insertions(+), 8 deletions(-)

diff --git a/src/App.tsx b/src/App.tsx
index 0728518..a2ad862 100755
--- a/src/App.tsx
+++ b/src/App.tsx
@@ -8,6 +8,7 @@ import './App.css';
  */
 interface IState {
   data: ServerRespond[],
+  showGraph: boolean,
 }
 
 /**
@@ -22,6 +23,7 @@ class App extends Component<{}, IState> {
       // data saves the server responds.
       // We use this state to parse data down to the child element (Graph) as element property
       data: [],
+      showGraph: false, // graph is hidden in initial state
     };
   }
 
@@ -29,18 +31,29 @@ class App extends Component<{}, IState> {
    * Render Graph react component with state.data parse as property data
    */
   renderGraph() {
-    return (<Graph data={this.state.data}/>)
+    if (this.state.showGraph) { // graph wont render until "Start Streaming" button is pressed
+      return (<Graph data={this.state.data}/>)
+    }
   }
 
   /**
    * Get new data from server and update the state with the new data
    */
   getDataFromServer() {
-    DataStreamer.getData((serverResponds: ServerRespond[]) => {
-      // Update the state by creating a new array of data that consists of
-      // Previous data in the state and the new data from server
-      this.setState({ data: [...this.state.data, ...serverResponds] });
-    });
+    // Update the state by getting data continuously from the server (instead of having to click the button multiple times)
+    let x = 0;
+    const interval = setInterval(() => {
+      DataStreamer.getData((serverResponds: ServerRespond[]) => {
+        this.setState({
+          data: serverResponds,
+          showGraph: true,
+        });
+      });
+      x++;
+      if (x > 1000) {
+        clearInterval(interval);
+      }
+    }, 100);
   }
 
   /**
diff --git a/src/Graph.tsx b/src/Graph.tsx
index 3b2a7da..42b0d3b 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -14,7 +14,7 @@ interface IProps {
  * Perspective library adds load to HTMLElement prototype.
  * This interface acts as a wrapper for Typescript compiler.
  */
-interface PerspectiveViewerElement {
+interface PerspectiveViewerElement extends HTMLElement { // makes sure this behaves like an HTMLElement
   load: (table: Table) => void,
 }
 
@@ -32,7 +32,7 @@ class Graph extends Component<IProps, {}> {
 
   componentDidMount() {
     // Get element to attach the table from the DOM.
-    const elem: PerspectiveViewerElement = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
+    const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
       stock: 'string',
@@ -49,6 +49,17 @@ class Graph extends Component<IProps, {}> {
 
       // Add more Perspective configurations here.
       elem.load(this.table);
+      elem.setAttribute('view', 'y_line'); // for continuous line graph
+      elem.setAttribute('column-pivots', '["stock"]'); // allows us to distinguish between different stocks
+      elem.setAttribute('row-pivots', '["timestamp"]'); // x-axis: allows mappings from data to the x-axis
+      elem.setAttribute('columns', '["top_ask_price"]'); // allows us to focus on a particular part of a stockâ€™s data along the y-axis
+      // handle duplicate data (data with same timestamps)
+      // average out the top_bid_prices and the top_ask_prices of these "duplicate" data points before treating them as one
+      elem.setAttribute('aggregates',
+        `{"stock":"distinct count",
+          "top_ask_price":"avg",
+          "top_bid_price":"avg",
+          "timestamp":"distinct count"}`);
     }
   }
 
-- 
2.42.0.windows.2

